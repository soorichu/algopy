정렬 알고리즘
정렬 - 여러 데이터로 구성된 리스트에서 값의 크기 순서에 따라 데이터를 재배치하는 것 

정렬 시점에 따라 내부정렬과 외부정렬로 나눌 수 있다.
(1) 내부정렬 - 모든 데이터를 주기억장치에 저장한 후 정렬하는 방식
(2) 외부정렬 - 모든 데이터를 주기억장치에 저장할 수 없는 경우, 모든 데이터를 보조기억장치를 정장한 채 일부 데이터씩만 반복적으로 주기억장치로 읽어 들여서 정렬하는 방식
우리는 주로 내부정렬에 대해 공부


내부정렬 알고리즘의 종류
정렬 방식에 따라 비교기반 알고리즘과 데이터 분포 기반 알고리즘.
우리가 흔히 공부하는 것은 비교기반 알고리즘
(1) 비교기반 정렬-  두 키값 전체를 직접적으로 비교하여 어떤 값이 큰지 또는 작은지를 결정하여 정렬을 수행하는 방식(버블, 선택, 삽입, 셸, 합병, 퀵, 힙)
(2) 비교기반정렬의 하한 - n!개의 리프 노드를 갖는 결정트리를 계산하면 n개의 서로 다른 숫자를 정렬하는데 필요한 키의 비교횟수를 알 수 있다. n!개의 리프노드를 가지는 결정트리의 높이 h는
   h >= [logn!] >= nlogn - 1.45n = O(nlogn)
따라서 비교기반정렬 알고리즘으로서 O(nlogn)보다 더 좋은 성능은 존재하지 않는다. 
(3) 데이터 분포 기반 정렬 - 키를 비교하는 것(비교기반)이 아니라 키의 분포를 이용함으로써 계산시간을 O(n)으로 줄일 수 있다. 


**비교기반 알고리즘(★)
버블 정렬 
선택 정렬 
삽입 정렬 
셀 정렬 
------------(보통 성능)
합병 정렬
퀵 정렬
힙 정렬
-----------(향상된 성능)
키값의 비교횟수로 비교함.

**데이터 분포 기반 알고리즘
계수정렬
기수정렬
------------(선형시간의 복잡도를 가짐)
자료의 이동횟수로서 비교함.

안정적(stable) 정렬
동일한 값을 갖는 데이터가 여러 개 있을 때 정렬 전의 상대적인 순서가 정렬 후에도 그대로 유지되는 정렬 방식
(예) 입력 데이터가 ....A...B....인 경우
안정적인 정렬은    ....AB.......
불안정적인 정렬은  ....BA.......


제자리(in-place) 정렬
입력 데이터를 저장하는 공간 이외에 추가적인 저장공간을 상수 개만 필요로 하는 정렬 방식
입력 크기 n이 증가함에도 불구하고 추가적인 저장공간은 증가하지 않음.

** 정렬 알고리즘의 비교 **
         실행시간           안정적  제자리
비교기반 ----------------------------------
   버블   O(n^2)              O       O
   선택   O(n^2)              X       O
   삽입   O(n^2)              O       O
     셀   O(n^2)              X       O
   합병   O(nlogn)            O       X
     퀵   O(n^2), O(nlogn)    X       O
     힙   O(nlogn)            X       O
분포기반 ----------------------------------
   계수   O(n)                O       X
   기수   O(n)                O       X

